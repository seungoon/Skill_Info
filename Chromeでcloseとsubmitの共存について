※Chromeでcloseとsubmitが共存する場合、EventがPostできない問題が存在する。
　そのため、close処理は別途に行う必要がある。
 
 ・例：
 // 子画面でunloadでCloseするか判断する
 $( window ).unload(function() {
    	var rtnValue = window.opener.getChildScreenFlag();
	  	if (rtnValue == "1") {
	  		window.opener.openChildScreen();
	  		window.close();
	  	}
 });
 
 // 子画面でSubmitする時
 document.mainForm.submit();
	window.opener.callbackPopupContractDetail();
 window.opener.focus();
 window.opener.closeChildScreen();
 
 // 親画面で以下のFunctionを定義
 function openChildScreen() {
  $("#mainForm [id=controlChildScreenFlag]").val("0");
 }
        
		function closeChildScreen() {
			$("#mainForm [id=controlChildScreenFlag]").val("1");
  }
		
		function getChildScreenFlag() {
			return $("#mainForm [id=controlChildScreenFlag]").val();
  }
    
 
※unloadイベントとは、ページから離れる時（ウインドウを閉じたり、別のページに移動したり、リロードしたりした時）に引数のfunctionを実行する。
